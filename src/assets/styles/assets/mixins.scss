@mixin font-face($font-family, $url, $weight: normal, $style: normal, $asset-pipeline: false) {
	@font-face {
		font-family: '#{$font-family}';
		font-weight: #{$weight};
		font-style: '#{$style}';
		font-display: swap;

		src: url('#{$url}.eot');
		src: url('#{$url}.eot?#iefix') format('embedded-opentype'),
		url('#{$url}.woff') format('woff'),
		url('#{$url}.ttf') format('truetype');

	}
}

@mixin pageOffsetTop {
	padding-bottom: 150px;
}

@mixin animateLink {
	position: relative;

  &::before {
    content: '';
    position: absolute;
    left: 0;
    bottom: -4px;
    width: 100%;
    height: 1px;
    background: $black;
    transform: scaleX(0);
    transition: all 0.4s;
  }

  &:hover::before {
    transform: scaleX(1);
  }
}

@mixin page-big-text {
	font-size: 42px;
	line-height: 1.3em;
	color: $black;
	max-width: 870px;
	text-transform: uppercase;
}

@mixin page-desc {
	font-size: 24px;
	line-height: 1.6em;
	color: $black;
}

// Function for converting a px based font-size to rem.
@function rem($size) {
	$remSize: $size / 14px;
	@return #{$remSize}rem;
}

@mixin optional-at-root($sel) {
	@at-root #{if(not &, $sel, selector-append(&, $sel))} {
	  @content;
	}
  }

@mixin placeholder {
	@include optional-at-root('::-webkit-input-placeholder') {
	  @content;
	}
  
	@include optional-at-root(':-moz-placeholder') {
	  @content;
	}
  
	@include optional-at-root('::-moz-placeholder') {
	  @content;
	}
  
	@include optional-at-root(':-ms-input-placeholder') {
	  @content;
	}
  }

@mixin btnWithText {
	font-family: $default-font;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	padding: 13px 10px;
	border-radius: 25px;
	border: 1px solid #ECEAE1;
	background-color: #fff;
	font-weight: 500;
	font-size: 14px;
	width: 264px;
	line-height: 1em;
	min-height: 50px;
	text-decoration: none;
	color: inherit;
	transition: all .4s;

	@include to(1440px) {
		width: 220px;
	}

	&:hover {
		color: $blue;
	}
}

@mixin toh($max_height) {
	@media screen and (max-height: $max_height) {
		@content;
	}
}

@mixin placeholder {
	::-webkit-input-placeholder {@content}
	:-moz-placeholder           {@content}
	::-moz-placeholder          {@content}
	:-ms-input-placeholder      {@content}  
  }


@function max($numbers...) {

	@return m#{a}x(#{$numbers})
}

;

@function min($numbers...) {

	@return m#{i}n(#{$numbers})
}

;


$full-width: 1200;
$work-width: 80;
$screen-height: 720;

@function vmax($pixels, $context: $full-width) {
	@return #{($pixels/$context)* 100}vmax
}
;

@function vw($pixels, $context: $full-width) {
	@return  #{($pixels/$context)* 100}vw
}

@function lh($lh, $fz) {
	@return #{($lh/$fz)}em
}
